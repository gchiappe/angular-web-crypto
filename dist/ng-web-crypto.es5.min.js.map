{"version":3,"sources":["ng-web-crypto.es5.js"],"names":["NgWebCryptoUtils","this","ABtoString","buffer","str","iii","byteLength","String","fromCharCode","StringtoAB","bytes","Uint8Array","length","charCodeAt","isFunction","obj","constructor","call","apply","isDefined","variable","ABToHS","uint8arr","hexStr","i","hex","toString","toUpperCase","HSToAB","a","len","push","parseInt","substr","angular","module","provider","$injector","_this","crypto","window","subtle","tools","instantiate","keys","cryptoKeys","getKey","kName","c","name","getCryptoKey","defaultKey","defaultCryptoKey","generateKey","options","random","getRandomValues","console","error","namedCurve","type","promise","Promise","resolve","reject","then","key","gRaw","gJwk","exportKey","publicKey","eJwk","eRaw","class","jwk","raw","catch","err","success","fn","getDefaultKeys","ecdh","checkKey","checkCryptoKey","importKey","crv","format","importDataObj","keyCapabilities","x","y","d","kty","ext","default","theKey","derive","privateKeyName","publicKeyName","privateKey","targetClass","targetLength","exportable","deriveKey","public","log","encrypt","data","tagLength","encIV","iv","encrypted","decrypt","ec","decrypted","dec","$get","ArrayBufferToHexString","ab","HexStringToArrayBuffer","hs","ArrayBufferToString","StringToArrayBuffer","deriveBits","generate","import","importAndDeriveWithDefaultKey","_provider","defKeys","importName","rsaKeyName","importedKeyName","derivedKeyName","importAndDerive","export","exportDefaultKey","encryptWithDefaultKey","decryptWithDefaultKey","factory","$webCryptoProvider","$webCrypto","$http","post","server","arguments","undefined","ucdata_str","JSON","stringify","encData","rdata","status","headers","config","statusText","indexOf","rdatao","split","rivo","parsed","parse","e","resultObj","p"],"mappings":"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","file":"ng-web-crypto.es5.min.js","sourcesContent":["/*\nngWebCrypto\n---\nThe MIT License (MIT)\n\ncopyright ©2016 Giancarlo A. Chiappe Aguilar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in \nthe Software without restriction, including without limitation the rights to \nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies \nof the Software, and to permit persons to whom the Software is furnished to do \nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all \ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER \nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE \nSOFTWARE.\n---\n©2016 Giancarlo Chiappe Aguilar <gchiappe@outlook.com.pe>\n*/\n'use strict';\n\nvar NgWebCryptoUtils = function () {\n    function NgWebCryptoUtils() {\n        this.ABtoString = function (buffer) {\n            var str = \"\";\n            for (var iii = 0; iii < buffer.byteLength; iii++) {\n                str += String.fromCharCode(buffer[iii]);\n            }\n            return str;\n        };\n        this.StringtoAB = function (str) {\n            var bytes = new Uint8Array(str.length);\n            for (var iii = 0; iii < str.length; iii++) {\n                bytes[iii] = str.charCodeAt(iii);\n            }\n            return bytes;\n        };\n        this.isFunction = function (obj) {\n            return !!(obj && obj.constructor && obj.call && obj.apply);\n        };\n        this.isDefined = function (variable) {\n            if (typeof variable === 'undefined' || variable === null) {\n                return false;\n            }\n            return true;\n        };\n        this.ABToHS = function (uint8arr) {\n            if (!uint8arr) {\n                return '';\n            }\n            var hexStr = '';\n            for (var i = 0; i < uint8arr.length; i++) {\n                var hex = (uint8arr[i] & 0xff).toString(16);\n                hex = hex.length === 1 ? '0' + hex : hex;\n                hexStr += hex;\n            }\n            return hexStr.toUpperCase();\n        };\n        this.HSToAB = function (str) {\n            if (!str) {\n                return new Uint8Array();\n            }\n            var a = [];\n            for (var i = 0, len = str.length; i < len; i += 2) {\n                a.push(parseInt(str.substr(i, 2), 16));\n            }\n            return new Uint8Array(a);\n        };\n    }\n    return NgWebCryptoUtils;\n}();\nangular.module('ngWebCrypto', []);\nangular.module('ngWebCrypto').provider('$webCrypto', function ($injector) {\n    var _this = this;\n\n    var crypto = window.crypto;\n    if (!crypto.subtle) {\n        throw 'ng-web-crypto: browser not supported.';\n    }\n    var tools = $injector.instantiate(NgWebCryptoUtils);\n    //almacenes: almacenar los cripto-objetos en variables de una funcion anonima.\n    var keys = []; // llaves ECDH\n    var cryptoKeys = []; // llaves criptograficas (def. AES-GCM)\n    // llaves ECDH\n    var getKey = function getKey(kName) {\n        for (var c = 0; c < keys.length; c++) {\n            if (keys[c].name == kName) {\n                return keys[c];\n            }\n        }\n        return -1;\n    };\n    // llaves AES\n    var getCryptoKey = function getCryptoKey(kName) {\n        for (var c = 0; c < cryptoKeys.length; c++) {\n            if (cryptoKeys[c].name == kName) {\n                return cryptoKeys[c];\n            }\n        }\n        return -1;\n    };\n    var defaultKey = null,\n        defaultCryptoKey = null;\n    // Funciones del proveedor:\n    this.generateKey = function (options) {\n        if (tools.isDefined(options.random)) {\n            if (options.random) {\n                options.name = tools.ABToHS(crypto.getRandomValues(new Uint8Array(12)));\n            }\n        }\n        if (!tools.isDefined(options.name)) {\n            console.error('key name is required for generating.');\n            return;\n        }\n        if (getKey(options.name) != -1) {\n            console.error('key name \"', options.name, '\" already in use.');\n            return;\n        }\n        if (!tools.isDefined(options.namedCurve)) {\n            options.namedCurve = 'P-256';\n        }\n        if (!tools.isDefined(options.type)) {\n            options.type = 'private';\n        }\n        if (!(options.type == 'private' || options.type == 'public' || options.type == 'mixed')) {\n            console.error('invalid key type (private, public, mixed).');\n            return;\n        }\n        // == Crear Promesa\n        var promise = new Promise(function (resolve, reject) {\n            // == Crear Llave\n            crypto.subtle.generateKey({\n                name: 'ECDH',\n                namedCurve: options.namedCurve\n            }, true, ['deriveKey', 'deriveBits']).then(function (key) {\n                var gRaw, gJwk;\n                crypto.subtle.exportKey('jwk', key.publicKey).then(function (eJwk) {\n                    gJwk = eJwk;\n                    crypto.subtle.exportKey('raw', key.publicKey).then(function (eRaw) {\n                        gRaw = eRaw;\n                        keys.push({\n                            class: 'ECDH',\n                            type: options.type,\n                            name: options.name,\n                            key: key,\n                            jwk: gJwk,\n                            raw: gRaw\n                        });\n                        if (getKey(options.name) != -1) {\n                            if (!tools.isDefined(defaultKey)) defaultKey = options.name;\n                            resolve(options.name);\n                        } else {\n                            reject('key was not added to storage.');\n                        }\n                    });\n                });\n            }).catch(function (err) {\n                reject(err);\n            });\n        });\n        promise.success = function (fn) {\n            promise.then(function (name) {\n                fn(name);\n            });\n            return promise;\n        };\n        promise.error = function (fn) {\n            promise.then(null, function (name) {\n                fn(name);\n            });\n            return promise;\n        };\n        return promise;\n    };\n    this.getDefaultKeys = function () {\n        return {\n            ecdh: defaultKey,\n            crypto: defaultCryptoKey\n        };\n    };\n    this.checkKey = function (kName) {\n        return getKey(kName) != -1;\n    };\n    this.checkCryptoKey = function (kName) {\n        return getCryptoKey(kName) != -1;\n    };\n    this.importKey = function (options) {\n        if (!tools.isDefined(options.name)) {\n            console.error('key name is required for importing.');\n            return;\n        }\n        if (_this.checkKey(options.name)) {\n            console.error('key name \"', options.name, '\" already in use.');\n            return;\n        }\n        if (!tools.isDefined(options.crv)) options.crv = 'P-256';\n        if (!tools.isDefined(options.format)) options.format = 'raw';\n        if (!tools.isDefined(options.type)) options.type = 'public';\n        var importDataObj = void 0;\n        var keyCapabilities = [];\n        if (options.format == 'jwk') {\n            if (!tools.isDefined(options.x) || !tools.isDefined(options.y) || !tools.isDefined(options.d)) {\n                throw 'x, y and d parameters are required to import an ECDH key.';\n            }\n            importDataObj = {\n                kty: 'EC',\n                crv: options.crv,\n                x: options.x,\n                y: options.y,\n                d: options.d,\n                ext: true\n            };\n            if (options.type == 'private') keyCapabilities = ['deriveKey', 'deriveBits'];\n        } else {\n            if (!tools.isDefined(options.raw)) {\n                throw 'raw parameter is missing.';\n            }\n            importDataObj = tools.HSToAB(options.raw);\n        }\n        var promise = new Promise(function (resolve, reject) {\n            crypto.subtle.importKey(options.format, importDataObj, {\n                name: 'ECDH',\n                namedCurve: options.crv\n            }, true, keyCapabilities).then(function (key) {\n                var gRaw = void 0,\n                    gJwk = void 0;\n                crypto.subtle.exportKey('jwk', key).then(function (eJwk) {\n                    gJwk = eJwk;\n                    crypto.subtle.exportKey('raw', key).then(function (eRaw) {\n                        gRaw = eRaw;\n                        keys.push({\n                            class: 'ECDH',\n                            type: options.type,\n                            name: options.name,\n                            key: { publicKey: key },\n                            jwk: gJwk,\n                            raw: gRaw\n                        });\n                        if (getKey(options.name) != -1) {\n                            resolve(options.name);\n                        } else {\n                            reject('key was not added to storage.');\n                        }\n                    });\n                });\n            }).catch(function (err) {\n                reject('error catched.');\n                throw err;\n            });\n        });\n        promise.success = function (fn) {\n            promise.then(function (name) {\n                fn(name);\n            });\n            return promise;\n        };\n        promise.error = function (fn) {\n            promise.then(null, function (name) {\n                fn(name);\n            });\n            return promise;\n        };\n        return promise;\n    };\n    this.exportKey = function (options) {\n        // == Chequeo\n        if (tools.isDefined(options.default)) {\n            if (options.default) if (tools.isDefined(defaultKey)) {\n                options.name = defaultKey;\n            } else {\n                throw 'default key is not defined.';\n            }\n        }\n        if (!tools.isDefined(options.name)) {\n            throw 'key name is required for exporting keys.';\n        }\n        // == Obtener la llave y verificarla.\n        var theKey = getKey(options.name);\n        if (theKey == -1) {\n            throw 'Key \"', options.name, '\" not found.';\n        }\n        // == Defectos\n        if (!tools.isDefined(options.type)) {\n            options.type = 'raw';\n        }\n        if (options.type == 'jwk') {\n            if (tools.isDefined(theKey.jwk)) return theKey.jwk;else {\n                throw 'the key \"', options.name, '\" cannot be exported.';\n            }\n        } else if (options.type == 'raw') {\n            if (tools.isDefined(theKey.raw)) return tools.ABToHS(new Uint8Array(theKey.raw));else {\n                throw 'the key \"', options.name, '\" cannot be exported.';\n            }\n        } else {\n            throw 'invalid export type';\n        }\n    };\n    this.derive = function (options) {\n        // == Chequeo de errores\n        if (!tools.isDefined(options.name)) {\n            throw 'key name is required for deriving ECDH keys.';\n        }\n        if (getCryptoKey(options.name) != -1) {\n            throw 'key name \"', options.name, '\" already in use.';\n        }\n        if (!tools.isDefined(options.privateKeyName) || !tools.isDefined(options.publicKeyName)) {\n            throw 'deriving keys require two previously stored keys.';\n        }\n        // == Obtener las llaves y verificarlas.   \n        var privateKey = getKey(options.privateKeyName),\n            publicKey = getKey(options.publicKeyName);\n        if (privateKey == -1) {\n            throw 'private key \"', options.privateKeyName, '\" not found.';\n        }\n        if (publicKey == -1) {\n            throw 'public key \"', options.publicKeyName, '\" not found.';\n        }\n        if (privateKey.type != 'mixed') {\n            if (privateKey.type != 'private') {\n                throw 'key \"', options.privateKeyName, '\" is not a valid private key.';\n            }\n            if (publicKey.type != 'public') {\n                throw 'key \"', options.publicKeyName, '\" is not a valid public key.';\n            }\n        }\n        // == Establecer defectos si no se han definido.            \n        if (!tools.isDefined(options.targetClass)) {\n            options.targetClass = 'AES-GCM';\n        }\n        if (!tools.isDefined(options.targetLength)) {\n            options.targetLength = 256;\n        }\n        if (!tools.isDefined(options.namedCurve)) {\n            options.namedCurve = 'P-256';\n        }\n        if (!tools.isDefined(options.exportable)) {\n            options.exportable = false;\n        }\n        //console.log('public', getKey(options.publicKeyName).key);\n        // == Derivacion\n        var promise = new Promise(function (resolve, reject) {\n            crypto.subtle.deriveKey({ name: 'ECDH',\n                namedCurve: options.namedCurve,\n                public: publicKey.key.publicKey }, privateKey.key.privateKey, { name: options.targetClass,\n                length: options.targetLength }, options.exportable, ['encrypt', 'decrypt']).then(function (key) {\n                key = { publicKey: key };\n                if (options.exportable) {\n                    crypto.subtle.exportKey('jwk', key.publicKey).then(function (eJwk) {\n                        crypto.subtle.exportKey('raw', key.publicKey).then(function (eRaw) {\n                            cryptoKeys.push({\n                                class: options.targetClass,\n                                type: 'private',\n                                name: options.name,\n                                key: key,\n                                jwk: eJwk,\n                                raw: eRaw\n                            });\n                            if (getCryptoKey(options.name) != -1) {\n                                if (!tools.isDefined(defaultCryptoKey)) defaultCryptoKey = options.name;\n                                resolve(options.name);\n                            } else {\n                                reject('key was not added to storage.');\n                            }\n                        });\n                    }).catch(function (err) {\n                        console.error('error exporting derived key: ', err, '.');\n                        reject(err);\n                    });\n                } else {\n                    cryptoKeys.push({\n                        class: options.targetClass,\n                        type: 'private',\n                        name: options.name,\n                        key: key,\n                        jwk: null,\n                        raw: null\n                    });\n                    if (getCryptoKey(options.name) != -1) {\n                        if (!tools.isDefined(defaultCryptoKey)) defaultCryptoKey = options.name;\n                        resolve(options.name);\n                    } else {\n                        reject('key was not added to storage.');\n                    }\n                }\n            }).catch(function (err) {\n                console.log('error deriving key: ', err, '.');\n                reject(err);\n            });\n        });\n        promise.success = function (fn) {\n            promise.then(function (name) {\n                fn(name);\n            });\n            return promise;\n        };\n        promise.error = function (fn) {\n            promise.then(null, function (name) {\n                fn(name);\n            });\n            return promise;\n        };\n        return promise;\n    };\n    this.encrypt = function (options) {\n        if (tools.isDefined(options.default)) {\n            if (options.default) if (tools.isDefined(defaultCryptoKey)) {\n                options.name = defaultCryptoKey;\n            } else {\n                throw 'default key is not defined.';\n            }\n        }\n        // == Verificacion de errores\n        if (!tools.isDefined(options.name)) {\n            throw 'key name is required for deriving ECDH keys.';\n        }\n        if (!tools.isDefined(options.data)) {\n            throw 'data option must be defined and not null.';\n        }\n        // == Obtener llave\n        if (getCryptoKey(options.name) == -1) {\n            throw 'Key \"', options.name, '\" not found.';\n        }\n        // == Validar capacidad de la llave\n        if (getCryptoKey(options.name).class == 'ECDH') {\n            throw 'Key \"', options.name, '\" is not valid for encryption.';\n        }\n        // == Defectos\n        if (!tools.isDefined(options.tagLength)) {\n            options.tagLength = 128;\n        }\n        // == IV (vector de inicializacion)\n        var encIV = crypto.getRandomValues(new Uint8Array(12));\n        // == Promesa\n        var promise = new Promise(function (resolve, reject) {\n            // == Cifrar\n            crypto.subtle.encrypt({\n                name: getCryptoKey(options.name).class,\n                iv: encIV,\n                tagLength: options.tagLength\n            }, getCryptoKey(options.name).key.publicKey, tools.StringtoAB(options.data)).then(function (encrypted) {\n                var data = {\n                    encrypted: tools.ABToHS(new Uint8Array(encrypted)),\n                    iv: tools.ABToHS(encIV)\n                };\n                // == Ejecutar promesa\n                resolve(data);\n            });\n        });\n        promise.success = function (fn) {\n            promise.then(function (data) {\n                fn(data.encrypted, data.iv);\n            });\n            return promise;\n        };\n        promise.error = function (fn) {\n            promise.then(null, function (name) {\n                fn(name);\n            });\n            return promise;\n        };\n        return promise;\n    };\n    this.decrypt = function (options) {\n        // == Comprobar si se va a usar la llave criptográfica por defecto.\n        if (tools.isDefined(options.default)) {\n            if (options.default) if (tools.isDefined(defaultCryptoKey)) {\n                options.name = defaultCryptoKey;\n            } else {\n                throw 'default key is not defined.';\n            }\n        }\n        // == Comprobacion\n        if (!tools.isDefined(options.name)) {\n            throw 'key name is required for decrypting.';\n        }\n        if (!tools.isDefined(options.iv)) {\n            throw 'the iv is required for decrypting.';\n        }\n        if (!tools.isDefined(options.data)) {\n            throw 'data option must be defined and not null.';\n        }\n        // == Obtener llave\n        if (getCryptoKey(options.name) == -1) {\n            throw 'Key \"', options.name, '\" not found.';\n        }\n        // == Validar capacidad de la llave\n        if (getCryptoKey(options.name).class == 'ECDH') {\n            throw 'Key \"', options.name, '\" is not valid for encryption.';\n        }\n        // == Defectos\n        if (!tools.isDefined(options.tagLength)) {\n            options.tagLength = 128;\n        }\n        var promise = new Promise(function (resolve, reject) {\n            crypto.subtle.decrypt({ name: getCryptoKey(options.name).class, iv: tools.HSToAB(options.iv), tagLength: options.tagLength }, getCryptoKey(options.name).key.publicKey, tools.HSToAB(options.data)).then(function (ec) {\n                data = { decrypted: tools.ABtoString(new Uint8Array(dec)) };\n                resolve(data);\n            }).catch(function (err) {\n                reject(err);\n            });\n        });\n        promise.success = function (fn) {\n            promise.then(function (data) {\n                fn(data.decrypted);\n            });\n            return promise;\n        };\n        promise.error = function (fn) {\n            promise.then(null, function (name) {\n                fn(name);\n            });\n            return promise;\n        };\n        return promise;\n    };\n    // == Servicio\n    this.$get = function () {\n        return {\n            //Acceso público a herramientas\n            tools: {\n                ArrayBufferToHexString: function ArrayBufferToHexString(ab) {\n                    return tools.ABToHS(ab);\n                },\n                HexStringToArrayBuffer: function HexStringToArrayBuffer(hs) {\n                    return tools.HSToAB(hs);\n                },\n                ArrayBufferToString: function ArrayBufferToString(ab) {\n                    return tools.ABtoString(ab);\n                },\n                StringToArrayBuffer: function StringToArrayBuffer(str) {\n                    return tools.StringtoAB(str);\n                }\n            },\n            deriveBits: function deriveBits(options) {},\n            //Acceso público a la generación de llaves\n            generate: function generate(options) {\n                return _this.generateKey(options);\n            },\n            //Importar llave pública\n            import: function _import(raw) {\n                return _this.importKey({ name: tools.ABToHS(crypto.getRandomValues(new Uint8Array(12))), raw: raw });\n            },\n            //Importar llave pública y derivar con la llave privada por defecto para generar una criptollave.\n            importAndDeriveWithDefaultKey: function importAndDeriveWithDefaultKey(raw) {\n                var _provider = this;\n                var defKeys = _provider.getDefaultKeys();\n                var importName = tools.ABToHS(crypto.getRandomValues(new Uint8Array(12)));\n                var rsaKeyName = tools.ABToHS(crypto.getRandomValues(new Uint8Array(12)));\n                if (tools.isDefined(defKeys.ecdh)) {\n                    var promise = new Promise(function (resolve, reject) {\n                        _provider.importKey({ name: importName, raw: raw }).success(function (importedKeyName) {\n                            _provider.derive({ name: rsaKeyName, privateKeyName: defKeys.ecdh, publicKeyName: importedKeyName }).success(function (derivedKeyName) {\n                                resolve(derivedKeyName);\n                            });\n                        });\n                    });\n                    promise.success = function (fn) {\n                        promise.then(function (data) {\n                            fn(data);\n                        });\n                        return promise;\n                    };\n                    promise.error = function (fn) {\n                        promise.then(null, function (name) {\n                            fn(name);\n                        });\n                        return promise;\n                    };\n                    return promise;\n                } else {\n                    console.error('No default ECDH key defined.');\n                }\n            },\n            //Importar y derivar contra una llave privada almacenada.\n            importAndDerive: function importAndDerive(name, raw) {\n                var _provider = _this;\n                var importName = tools.ABToHS(crypto.getRandomValues(new Uint8Array(12)));\n                var rsaKeyName = tools.ABToHS(crypto.getRandomValues(new Uint8Array(12)));\n                var promise = new Promise(function (resolve, reject) {\n                    _provider.importKey({ name: importName, raw: raw }).success(function (importedKeyName) {\n                        _provider.derive({ name: rsaKeyName, privateKeyName: name, publicKeyName: importedKeyName }).success(function (derivedKeyName) {\n                            resolve(derivedKeyName);\n                        });\n                    });\n                });\n                promise.success = function (fn) {\n                    promise.then(function (data) {\n                        fn(data);\n                    });\n                    return promise;\n                };\n                promise.error = function (fn) {\n                    promise.then(null, function (name) {\n                        fn(name);\n                    });\n                    return promise;\n                };\n                return promise;\n            },\n            //Accesos públicos y short-cuts.\n            export: function _export(name) {\n                return _this.exportKey({ name: name });\n            },\n            exportDefaultKey: function exportDefaultKey() {\n                return _this.exportKey({ default: true });\n            },\n            encrypt: function encrypt(name, data) {\n                return _this.encrypt({ name: name, data: data });\n            },\n            decrypt: function decrypt(name, data, iv) {\n                return _this.decrypt({ name: name, data: data, iv: iv });\n            },\n            encryptWithDefaultKey: function encryptWithDefaultKey(data) {\n                return _this.encrypt({ default: true, data: data });\n            },\n            decryptWithDefaultKey: function decryptWithDefaultKey(data, iv) {\n                return _this.decrypt({ default: true, data: data, iv: iv });\n            }\n        };\n    };\n}).factory('$httpCrypto', function ($webCryptoProvider, $webCrypto, $http, $injector) {\n    //This service is a WIP part, not tested but should be functional, requires a compatible\n    //server.\n    var tools = $injector.instantiate(NgWebCryptoUtils);\n    return {\n        post: function post(server, data) {\n            var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n            if (!tools.isDefined(server)) {\n                console.error('please define \"server\" in the options.');\n                return;\n            }\n            if (!tools.isDefined(data)) {\n                data = {};\n            }\n            if (!tools.isDefined(key)) {\n                key = $webCryptoProvider.getDefaultKeys().crypto;\n                if (!tools.isDefined(key)) {\n                    console.error('default crypto key is not defined');\n                    return;\n                }\n            }\n            if (!$webCryptoProvider.checkCryptoKey(key)) {\n                console.error('key \"', key, '\" not found.');\n                return;\n            }\n            var ucdata_str = JSON.stringify(data);\n            var promise = new Promise(function (resolve, reject) {\n                $webCryptoProvider.encrypt({\n                    name: key,\n                    data: ucdata_str\n                }).success(function (encrypted, iv) {\n                    var encData = {\n                        data: encrypted,\n                        iv: iv\n                    };\n                    $http.post(server, {\n                        d: encrypted + '.' + iv\n                    }).success(function (rdata, status, headers, config, statusText) {\n                        // == Validar respuesta\n                        if (!tools.isDefined(rdata.d)) {\n                            console.error('invalid crypto response from server.');\n                            reject(rdata);\n                            return;\n                        }\n                        if (rdata.d.indexOf(\".\") == -1) {\n                            console.error('invalid crypto response from server.');\n                            reject(rdata);\n                            return;\n                        }\n                        // == Parsear respuesta\n                        var rdatao = rdata.d.split('.')[0];\n                        var rivo = rdata.d.split('.')[1];\n                        // == Decifrar ahora\n                        $webCryptoProvider.decrypt({\n                            name: key,\n                            data: rdatao,\n                            iv: rivo\n                        }).success(function (decrypted) {\n                            try {\n                                var parsed = JSON.parse(decrypted);\n                            } catch (e) {\n                                console.error('decrypted response is not json.');\n                                reject(decrypted);\n                                return;\n                            }\n                            resultObj = {\n                                data: parsed,\n                                status: status,\n                                headers: headers,\n                                config: config,\n                                statusText: statusText,\n                                encrypted: encData\n                            };\n                            resolve(resultObj);\n                        }).error(function (err) {\n                            resultObj = {\n                                data: null,\n                                status: status,\n                                headers: headers,\n                                config: config,\n                                statusText: statusText,\n                                encrypted: encData\n                            };\n                            reject(resultObj);\n                        });\n                    }).error(function (rdata, status, headers, config, statusText) {\n                        resultObj = {\n                            data: null,\n                            status: status,\n                            headers: headers,\n                            config: config,\n                            statusText: statusText,\n                            encrypted: encData\n                        };\n                        reject(resultObj);\n                    });\n                }).error(function (err) {\n                    resultObj = {\n                        data: null,\n                        status: null,\n                        headers: null,\n                        config: config,\n                        statusText: null,\n                        encrypted: null\n                    };\n                    reject(resultObj);\n                });\n            });\n            promise.success = function (fn) {\n                promise.then(function (p) {\n                    fn(p.data);\n                });\n                return promise;\n            };\n            promise.error = function (fn) {\n                promise.then(null, function (name) {\n                    fn(name);\n                });\n                return promise;\n            };\n            return promise;\n        }\n    };\n});"]}